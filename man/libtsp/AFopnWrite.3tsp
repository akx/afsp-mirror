.TH AFopnWrite - libtsp (3tsp)
.SH Routine:
AFILE *AFopnWrite(const char Fname[], enum AF_FTW_T FtypeW,
.br
                  enum AF_FD_T Format, long int Nchan, double Sfreq,
.br
                  FILE *fpinfo)
.SH Purpose:
Open an audio file for writing
.SH Description:
This routine opens an audio file for writing. This routine sets up the audio
file parameters to write data of the given format to the audio file. After
writing data to the file, the routine AFclose should be called to update the
file header information and close the file.
.PP
By default, information records consisting, for instance, the date and the
program creating the file (see UTsetProg) are written to the audio file header
or trailer. The routine AFsetInfo can be called before calling this routine
to specify additional information to be written to the file.
.PP
This routine can write AU audio files, AIFF, AIFF-C files, WAVE files, text
audio files, and headerless audio files.
.in +3n
.ti -3n
AU audio file:
.br
8-bit mu-law, 8-bit A-law, 8/16/24/32-bit integer, and 32/64-bit IEEE
floating-point data formats are supported.
.ti -3n
WAVE file:
.br
8-bit mu-law, 8-bit A-law, offset-binary 8-bit integer, 16/24/32-bit
integer, and 32/64-bit IEEE floating-point, data formats are supported.
.ti -3n
AIFF sound file:
.br
8/16/24/32-bit integer data formats are supported.
.ti -3n
AIFF-C sound file:
.br
8-bit mu-law, 8-bit A-law, 8/16/24/32-bit integer, and 32/64-bit IEEE
floating-point data formats are supported.
.ti -3n
Text audio file:
.br
text format data, one value to a line. The data is written as a floating
point value with 6 digits of precision (%g format).
.ti -3n
Headerless file:
.br
8-bit mu-law, 8-bit A-law, offset-binary 8-bit integer, 8/16/24/32-bit
integer, 32/64-bit floating-point, and text data formats are supported.
.in -3n
For the fixed point file data representations, input values in the range
[-1,  +1) ([-0.5, +0.5) for 8-bit data) will be converted without clipping.
The scaling factor shown below is applied to the data before they are
written to the file.
.ft CW
.nf
   data format   scaling factor   file data values
  8-bit A-law     32,768         [-32,256, +32,256]
  8-bit mu-law    32,768         [-32,124, +32,124]
  8-bit integer   256            [-128, 127]
  16-bit integer  32,768         [-32,768, +32,767]
  24-bit integer  8,388,608      [-8,388,608, +8,388,607]
  32-bit integer  2,147,483,648  [-2,147,483,648, 2,147,483,647]
.fi
.ft P
For files containing floating-point data, values are scaled by unity.
.PP
The file type codes (defined in AFpar.h) accepted are
.ft CW
.nf
  FTW_AU          - AU audio file
  FTW_WAVE        - WAVE audio file, upgraded to WAVE-ex if appropriate
  FTW_WAVE_EX     - WAVE audio file (extensible format)
  FTW_WAVE_NOEX   - WAVE audio file, do not upgrade to WAVE-ex
  FTW_AIFF        - AIFF audio file
  FTW_AIFF_C      - AIFF-C audio file
  FTW_AIFF_C_SOWT - AIFF-C audio file (PCM, byte swapped)
  FTW_NH_NATIVE   - noheader file, native byte order
  FTW_NH_SWAP     - noheader file, swap byte order
  FTW_NH_EL       - noheader file, little-endian data
  FTW_NH_EB       - noheader file, big-endian data
  FTW_TEXT        - Text audio file (with header)
.fi
.ft P
The data format codes (defined in AFpar.h) accepted are
.ft CW
.nf
  FD_ALAW8   - A-law 8-bit
  FD_MULAW8  - mu-law 8-bit
  FD_MULAWR8 - bit-reversed mu-law 8-bit
  FD_UINT8   - offset binary integer 8-bit
  FD_INT8    - integer 8-bit
  FD_INT16   - integer 16-bit
  FD_INT24   - integer 24-bit
  FD_INT32   - integer 32-bit
  FD_FLOAT32 - float 32-bit
  FD_FLOAT64 - float 64-bit
  FD_TEXT16  - text data scaled as 16-bit integers
  FD_TEXT    - text data
.fi
.ft P
The data types accepted by the different file types are as follows.
.ft CW
.nf
  AU audio files:
    mu-law, A-law, 8/16/24/32-bit integer, 32/64-bit float
  WAVE files:
    mu-law, A-law, offset-binary 8-bit, 16/24/32-bit integer, 32/64-bit float
  AIFF-C sound files:
    mu-law, A-law, 8/16/24/32-bit integer, 32/64-bit float
  AIFF and AIFF-C/sowt sound files:
    8/16/24/32-bit integer
  Text audio files:
    text data
  Headerless files:
    all data formats
.fi
.ft P
.SH Parameters:
.in +3n
.ti -3n
<-  AFILE *AFopnWrite
.br
Audio file pointer for the audio file
.ti -3n
 -> const char Fname[]
.br
Character string specifying the file name. The file name "-" means
standard output.
.ti -3n
 -> enum AF_FTW_T FtypeW
.br
File type code for the output file (distinguishes between subtypes)
(FTW_AU, FTW_WAVE, ..., FTW_WAVE_NOEX, ...)
.ti -3n
 -> enum AF_FD_T Format
.br
Data format code (FD_MULAW8, ..., FD_TEXT)
.ti -3n
 -> long int Nchan
.br
Number of channels
.ti -3n
 -> double Sfreq
.br
Sampling frequency
.ti -3n
 -> FILE *fpinfo
.br
File pointer for printing audio file information. If fpinfo is not NULL,
information about the audio file is printed on the stream selected by
fpinfo.
.in -3n
.SH Author / revision:
P. Kabal
/ Revision 1.33  2020-11-30
.SH See Also
AFclose,
AFdWriteData,
AFfWriteData,
AFsetInfo,
AFsetSpeaker,
libtsp
